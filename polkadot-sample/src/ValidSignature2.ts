const { decodeAddress, signatureVerify } = require('@polkadot/util-crypto');
const { u8aToHex } = require('@polkadot/util');

const isValidSignature = (signedMessage, signature, address) => {
  const publicKey = decodeAddress(address);
  const hexPublicKey = u8aToHex(publicKey);

  return signatureVerify(signedMessage, signature, hexPublicKey).isValid;
};

const msg = '0x070538003004ccce7f54f6043f13a030b1f07231d81826e99ffd3508fddfdbd0e5a958540076a6b80847d39f2242188ab8488af63177db6cc02d15808fddf18668e2d6bc2500a082ef6765a3eef5cce291b2507c5ac3d6ffe5e10ecec2525d1554b8d2db144000089c56451184d40b7911f91ab7f12d07ef6e2b1b4dc50a050adbfa4f8b58cb5500e043d8f7872cd895f8957c9179c4264816be3e649713cb3bdc523f752602cc3a00e8382680e672b8403c57f2bd1073c34219fbd40160e8907ff4cbc548976d263f00a46b7c2ff66b1247e437df5b9eee7da98a4df42092e82dd14f74b8ddf00cae1d00fa68c92bfdbd08a08d4cf5995379e28d3ac042b814a7bb2a1e2095d5e27cec7b00ea9c4b014031963e4e1961db0b632181056d80692b9f9f8302b0916394e1402700dc940c013d2869a42dfbdef9882e33b67ae45dd42494db04d49feef8dc2a680400dc313b667a08d4a8293ed90733697961647be1182449338e3ba7215cb786311d00324ec702cbef49677b575d5f1d84768fa445f2e273530172952030521917985f003af8b075de8a04f234f06c62ab44ef258be19bce462385f9d03c1244dab2734e00d0aed46706bbb3fd28d13bc698b81ef6aaa0cf78942879954835e3f8475f40445b1900001d0000000600000091b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c38a5ab23868c1fbc701ebd1528cf8657b057ef7193678a845946f741f51ca63079000'
const signature = '0x885125b9021c2a1c4eaeea2881a97a5d80c7154b34fa5b6dbabf3ce60969b5bd4b679dbd862e0fc1167662dced770bbb7552691d7198cd715af3ede29b13eb2e01'
const publicKey = '16H5Gp1GH9kjjaxmoje8G6YKyr9jzEuA3opSMMiMNGdsFRPn'

const isValid = isValidSignature(
  msg,
  signature,
  publicKey
);

console.log(isValid)
